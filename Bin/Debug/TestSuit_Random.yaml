
TestRandomSchrage:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    ThreadAutoDecompose : 1
    RandomType : ER_Schrage
    RandomSeed : 1234567

    ##10x10x10 blocks, each with 16x16x4 threads, each thread loop for 200 times
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000

    TestAccuracy : 0.02

TestRandomXORWOW:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_XORWOW
    RandomSeed : 1234567
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000
    TestAccuracy : 1E-3

TestRandomMRG32K3A:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_MRG32K3A
    RandomSeed : 1234567
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000
    TestAccuracy : 1E-3

TestRandomPhilox:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_PHILOX4_32_10
    RandomSeed : 1234567
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000
    ## excuse me??
    TestAccuracy : 0.5

TestRandomSOBOL32:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_QUASI_SOBOL32
    RandomSeed : 1234567
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000
    TestAccuracy : 3E-2

TestRandomScrambledSOBOL32:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_SCRAMBLED_SOBOL32
    RandomSeed : 1234567
    PiDecomp: [20, 20, 10, 16, 4, 4, 200]
    GaussianDecomp: [3, 4, 4, 16, 4, 4, 100]
    HostSample : 1000
    TestAccuracy : 1E-2


TestSU3GeneratorSchrage:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_Schrage
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.0001

TestSU3GeneratorXORWOW:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_XORWOW
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.0001

TestSU3GeneratorMRG32K3A:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_MRG32K3A
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.0002

TestSU3GeneratorPhilox:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_PHILOX4_32_10
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.0001

TestSU3GeneratorSOBOL32:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_QUASI_SOBOL32
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.03

TestSU3GeneratorScrambledSOBOL32:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 8]
    RandomType : ER_SCRAMBLED_SOBOL32
    RandomSeed : 1234567
    FieldSampleCount : 1000
    TestAccuracy : 0.03

TestSeed:

    Dim : 4
    Dir : 4
    LatticeLength : [8, 8, 8, 4]
    LatticeIndex : CIndexSquare
    LatticeBoundary : CBoundaryConditionPeriodicAndDirichletSquare
    ThreadAutoDecompose : 1
    RandomType : ER_Schrage
    RandomSeed : 1234567
    FermionFieldCount : 1

    Updator:

        ## UpdatorType = { CHMC }
        UpdatorType : CHMC

        Metropolis : 1

        ## Will only read this when updator is HMC IntegratorType = { CIntegratorLeapFrog, CIntegratorOmelyan }
        IntegratorType : CIntegratorNestedForceGradient
        # IntegratorType : CIntegratorForceGradient
        IntegratorStepLength : 1
        IntegratorStep : 8
        NestedStep : 5

    Gauge:
    
        ## FieldType = {CFieldGaugeSU3}
        FieldName : CFieldGaugeSU3

        ## FieldInitialType = { EFIT_Zero, EFIT_Identity, EFIT_Random, EFIT_RandomGenerator, EFIT_ReadFromFile,}
        FieldInitialType : EFIT_Random

        Period : [1, 1, 1, 1]

    FermionField1:

        FieldName : CFieldFermionWilsonSquareSU3Acc
        FieldInitialType : EFIT_RandomGaussian
        Hopping : 0.16
        FieldId : 2
        PoolNumber : 26
        Period : [1, 1, 1, -1]
        ## Default to use Naive discretization (which is faster)

